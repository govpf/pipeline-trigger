variables:
  IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  # set via secret variables
  API_TOKEN: $PERSONAL_ACCESS_TOKEN
  PROJ_A_ID: $PROJ_A_ID
  PROJ_A_PIPELINE_TOKEN: $PROJ_A_PIPELINE_TOKEN
  PROJ_B_ID: $PROJ_B_ID
  PROJ_B_PIPELINE_TOKEN: $PROJ_B_PIPELINE_TOKEN
  PROJ_RETRY_ID: $PROJ_RETRY_ID
  PROJ_RETRY_PIPELINE_TOKEN: $PROJ_RETRY_PIPELINE_TOKEN
  REF: master


stages:
  - build
  - test
  - release


build-sha:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build --pull -t $IMAGE .
    - docker push $IMAGE

test basic:
  stage: test
  image: $IMAGE
  script: 
    - trigger -a $API_TOKEN -p $PROJ_B_PIPELINE_TOKEN -t $REF $PROJ_B_ID


test env variables:
  stage: test
  image: $IMAGE
  script: 
    - trigger -a $API_TOKEN -p $PROJ_A_PIPELINE_TOKEN -t $REF -e foo1=bar2 -e foo2=bar3 $PROJ_A_ID


test host & url:
  stage: test
  image: $IMAGE
  script: 
    - trigger -a $API_TOKEN -p $PROJ_B_PIPELINE_TOKEN -t $REF -h gitlab.com -u /api/v4/projects $PROJ_B_ID


test detach:
  stage: test
  image: $IMAGE
  script:
    - trigger -d -p $PROJ_B_PIPELINE_TOKEN -t $REF $PROJ_B_ID

test retry:
  stage: test
  image: $IMAGE
  script: |
    # https://gitlab.com/finestructure/pt-proj-retry.git is a project that randomly failes with a rate of 50%
    # In order to test retry behaviour, we run it until it fails and then run until it succeeds.
    max_retries=20
    cmd="trigger -a $API_TOKEN -p $PROJ_RETRY_PIPELINE_TOKEN -t $REF -r $PROJ_RETRY_ID"

    echo
    echo "## Trying until we get first faiure"
    echo
    attempt=1
    until ! $cmd
    do
      if [ $attempt -eq $max_retries ]; then
        echo "Attempt $attempt failed, retrying ..."
        attempt=$((attempt+1))
      else
        break
      fi
    done
    
    echo
    echo "## Trying until we get first success"
    echo
    attempt=1
    until $cmd
    do
      if [ $attempt -eq $max_retries ]; then
        echo "Attempt $attempt failed, retrying ..."
        attempt=$((attempt+1))
      else
        break
      fi
    done

.release_template: &release_template
  stage: release
  image: docker:latest
  services:
    - docker:dind


.image_release: &image_release
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $IMAGE
    - docker tag $IMAGE $RELEASE_IMAGE
    - docker push $RELEASE_IMAGE


release-latest:
  only:
    - master
  variables:
    RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  <<: *release_template
  <<: *image_release


release-tag:
  only:
    - tags
  variables:
    RELEASE_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  <<: *release_template
  <<: *image_release
