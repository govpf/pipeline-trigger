variables:
  IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  # set via secret variables
  API_TOKEN: $PERSONAL_ACCESS_TOKEN
  PROJ_A_ID: $PROJ_A_ID
  PROJ_A_PIPELINE_TOKEN: $PROJ_A_PIPELINE_TOKEN
  PROJ_B_ID: $PROJ_B_ID
  PROJ_B_PIPELINE_TOKEN: $PROJ_B_PIPELINE_TOKEN
  TARGET_BRANCH: master


stages:
  - build
  - deploy_dev
  - test_dev
  - deploy_qa


.build_template: &build_template
  stage: build
  image: docker:latest
  services:
    - docker:dind


.image_build: &image_build
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build --pull -t $IMAGE .
    - docker push $IMAGE


build-sha:
  <<: *build_template
  <<: *image_build


build-latest:
  <<: *build_template
  <<: *image_build
  variables:
    IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  only:
    - master


build-tag:
  <<: *build_template
  <<: *image_build
  variables:
    IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  only:
    - master
    - tags


deploy dev:
  stage: deploy_dev
  script:
    - echo "deploying to dev"


test proj a:
  stage: test_dev
  image: $SHA_IMAGE
  script: 
    - trigger -a $API_TOKEN -p $PROJ_A_PIPELINE_TOKEN -t $TARGET_BRANCH $PROJ_A_ID


test proj b:
  stage: test_dev
  image: $SHA_IMAGE
  script: 
    - trigger -a $API_TOKEN -p $PROJ_B_PIPELINE_TOKEN -t $TARGET_BRANCH $PROJ_B_ID


deploy_qa:
  stage: deploy_qa
  script:
    - echo "deploying to qa"
